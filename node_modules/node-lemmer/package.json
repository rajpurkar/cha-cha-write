{
  "name": "node-lemmer",
  "version": "0.1.0",
  "main": "./lib/node-lemmer",
  "description": "English and Russian lemmatizer for Node.js",
  "repository": {
    "type": "git",
    "path": "git://github.com/grachev/node-lemmer.git"
  },
  "author": {
    "name": "Roman Grachev",
    "email": "roman.grachev@gmail.com"
  },
  "licenses": [
    {
      "type": "LGPL"
    }
  ],
  "scripts": {
    "install": "node-gyp rebuild"
  },
  "gypfile": true,
  "readme": "# node-lemmer #\n\n## Introduction ##\n\nEnglish and Russian lemmatizer for Node.js, based on lemmatizer.org project.\n\nLemmatization is a process of finding *lemma* (main form) and *part of speech*\n(e. g. noun, verb, adjective) for a word. This is useful for the purposes of\nnatural language processing,\ne.g. fact extraction, indexing for full-text search, etc.\n\nSome words have several lemmas. These are so-called *homonyms*, groups\nof words which have the same spelling (and often pronounciation) but have\ndifferent meanings.\n\n## Lemmatization examples ##\n\nEnglish:\n\n* uses -> USE\n* fought -> FIGHT\n* found -> FIND, FOUND\n\nRussian:\n\n* ешь -> ЕСТЬ\n* стулья -> СТУЛ\n* белок -> БЕЛОК, БЕЛКА\n\n## Usage ##\n\n```javascript\nvar Lemmer = require('node-lemmer').Lemmer;\n\nvar lemmerEng = new Lemmer('english');\nlemmerEng.lemmatize('fought');\n\nvar lemmerRus = new Lemmer('russian');\nlemmerRus.lemmatize('белок');\n\n```\n\n## License ##\n\nLGPL\n",
  "readmeFilename": "README.md",
  "_id": "node-lemmer@0.1.0",
  "_shasum": "98f4ed2a111524cba852836ee0b220864b3c167e",
  "_resolved": "git+ssh://git@github.com:grachev/node-lemmer.git#493f2c1c26eab9a741e43307b83426c8b00870af",
  "_from": "node-lemmer@git+ssh://git@github.com:grachev/node-lemmer.git"
}
